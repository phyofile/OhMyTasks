@model List<TasksManager.Core.TaskItem>
@{
    ViewData["Title"] = "Tasks";
}

<div class="text-center">
    <h1 class="display-4">Tasks</h1>
</div>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="container">
    <div class="row mb-3">
        <div class="col">
            <a asp-action="Create" class="btn btn-primary">Add New Task</a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">No tasks found. Add a new task to get started!</div>
    }
    else
    {
        <div class="list-group">
            @for (var i = 0; i < Model.Count; i++)
            {
                var task = Model[i];
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="@(task.IsCompleted ? "text-muted text-decoration-line-through" : "")">
                        @task.Description
                    </div>
                    <div class="btn-group">
                        @if (!task.IsCompleted)
                        {
                            <form asp-action="Complete" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@i" />
                                <button type="submit" class="btn btn-success btn-sm">Complete</button>
                            </form>
                        }
                        <form asp-action="Delete" method="post" class="d-inline ms-2">
                            <input type="hidden" name="id" value="@i" />
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this task?')">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
</div>